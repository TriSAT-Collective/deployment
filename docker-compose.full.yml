services:
  mongo:
    image: mongo
    container_name: ${PREFIX:-fh-}mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    networks:
      - fh
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: ${PREFIX:-fh-}rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./config/rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - fh
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo-express:
    image: mongo-express
    container_name: ${PREFIX:-fh-}mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@${PREFIX:-fh-}mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - fh

  postgres:
    image: postgres:16.6
    container_name: ${PREFIX:-fh-}postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    networks:
      - fh

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.5
    container_name: ${PREFIX:-fh-}keycloak
    command:
      - start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${PREFIX:-fh-}postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - fh

  grafana:
    image: grafana/grafana-enterprise
    container_name: ${PREFIX:-fh-}grafana
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - fh

  smart-meter-simulation-1:
    image: ghcr.io/trisat-collective/smart-meter-simulation:1.11.0
    environment:
      APPSETTINGS__RABBITMQ__URI: amqp://rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      smart-meter-collector:
        condition: service_started
    networks:
      - fh

  smart-meter-simulation-2:
    image: ghcr.io/trisat-collective/smart-meter-simulation:1.11.0
    environment:
      APPSETTINGS__RABBITMQ__URI: amqp://rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      smart-meter-collector:
        condition: service_started
    networks:
      - fh

  smart-meter-simulation-3:
    image: ghcr.io/trisat-collective/smart-meter-simulation:1.11.0
    environment:
      APPSETTINGS__RABBITMQ__URI: amqp://rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      smart-meter-collector:
        condition: service_started
    networks:
      - fh

  smart-meter-collector:
    image: ghcr.io/trisat-collective/smart-meter-collector:1.5.1
    environment:
      APPSETTINGS__RABBITMQ__URI: amqp://rabbitmq
      APPSETTINGS__MONGODB__CONNECTIONSTRING: mongodb://root:password@mongo:27017
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - fh

  api-geosphere:
    image: ghcr.io/trisat-collective/api-geosphere:1.2.3
    environment:
      APPSETTINGS__MONGODB__CONNECTIONSTRING: mongodb://root:password@mongo:27017
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fh

  api-data-access:
    image: ghcr.io/trisat-collective/api-data-access:1.1.3
    ports:
      - 8888:8080
    environment:
      APPSETTINGS__MONGODB__CONNECTIONSTRING: mongodb://root:password@mongo:27017
      APPSETTINGS__API__APIKEY: this-is-just-a-test-key
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fh

volumes:
  grafana-data:
  postgres-data:
  mongo-data:

networks:
  fh:
    name: ${PREFIX:-fh-}network
    driver: bridge
